{"version":3,"sources":["SelectionMaintainingInput.js","ListItem.js","Warning.js","ShareScreen.js","share.png","List.js","dropdown.png","Lists.js","google-logo.png","App.js","reportWebVitals.js","index.js"],"names":["SelectionMaintainingInput","props","value","onChange","useState","cursor","setCursor","ref","useRef","useEffect","input","current","setSelectionRange","document","activeElement","id","scrollIntoView","behavior","block","className","readOnly","e","target","selectionStart","onClick","ListItem","item","editable","type","checked","disabled","onItemChanged","JSON","parse","priority","onItemsDeleted","Warning","tabIndex","onClose","data","filter","map","ShareScreen","emails","setEmails","currentEmail","setCurrentEmail","showShareWithSelfError","setShowShareWithSelfError","showShareWithValidError","setShowShareWithValidError","showShareWithDuplicateError","setShowShareWithDuplicateError","checkValidInput","user","email","showShareScreenEmails","includes","test","required","placeholder","onKeyPress","key","a","onListUnshared","showShareScreenID","length","onListShared","setShowShareScreenID","List","hideCompletedItems","setHideCompletedItems","setEditable","showWarning","setShowWarning","newItemText","setNewItemText","newItemPriority","setNewItemPriority","listNameEditable","setListNameEditable","listItems","created","incompleteListItems","sortLabels","name","desc","asc","dropDownOptions","field","direction","sortField","sortDirection","push","setSelectedListID","setSelectedListName","selectedListName","onListNameChanged","src","share","alt","tabindex","onItemAdded","onSortItems","transitionName","transitionEnter","transitionLeave","htmlFor","Lists","newListText","setNewListText","showLogout","setShowLogout","hideUsername","useMediaQuery","maxWidth","useLoading","loading","indicator","width","containerProps","indicatorEl","sortListField","sortListDirection","generateLists","isOwner","role","setShowShareScreenEmails","sharedWith","onListDeleted","yourLists","sharedLists","sharedData","emailVerified","verifyEmail","auth","signOut","dropdown","onListAdded","onSortLists","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleProvider","GoogleAuthProvider","collectionName","listsCollectionName","SignIn","useSignInWithEmailAndPassword","signInWithEmailAndPassword","userCredential","error","setEmail","password","setPassword","isNarrow","message","signInWithPopup","googleLogo","SignUp","useCreateUserWithEmailAndPassword","createUserWithEmailAndPassword","verifyPassword","setVerifyPassword","noMatch","setNoMatch","tooShort","setTooShort","SignedInApp","selectedListID","sortItemsField","setSortItemsField","sortItemsDirection","setSortItemsDirection","setSortListField","setSortListDirection","listQuery","collection","doc","orderBy","listCollection","useCollection","listValue","listLoading","listsQuery","where","uid","listsValue","listsLoading","listsError","sharedQuery","sharedValue","sharedLoading","sharedError","listData","listsData","listId","docRef","list","update","ids","delete","docs","newId","generateUniqueID","newItem","FieldValue","serverTimestamp","set","newVal","sort","split","newSortField","newSortDirection","newName","listName","newList","owner","setSortListDiretion","App","useAuthState","currentUser","sendEmailVerification","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","initialData","getElementById"],"mappings":"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","file":"static/js/main.a54b7feb.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nfunction SelectionMaintainingInput(props) {\n    const { value, onChange, ...rest } = props;\n    const [cursor, setCursor] = useState(null);\n    const ref = useRef(null);\n\n    useEffect(() => {\n        const input = ref.current;\n        if (input) input.setSelectionRange(cursor, cursor);\n        if (document.activeElement.id === props.id && input) {\n            input.scrollIntoView({ behavior: 'smooth', block: \"nearest\"});\n        }\n    }, [ref, cursor, value]);\n\n    const handleChange = (e) => {\n        setCursor(e.target.selectionStart);\n        onChange && onChange(e);\n    };\n\n    return <textarea\n        id={props.id}\n        ref={ref}\n        className={props.className}\n        value={value}\n        readOnly={props.readOnly}\n        onChange={handleChange}\n        onClick={props.onClick}\n        aria-label={`List Item ${value}`}\n    />\n}\n\nexport default SelectionMaintainingInput;","import React from 'react';\nimport './ListItem.css';\nimport {useRef, useEffect} from \"react\";\nimport SelectionMaintainingInput from \"./SelectionMaintainingInput\";\n\nfunction ListItem(props) {\n    let item = <div id={props.editable ? \"editableItems\" : \"nonEditableItems\"}>\n        <input type={'checkbox'}\n               id={props.id}\n               checked={props.checked}\n               disabled={props.editable}\n               onChange={(e) =>\n                {if (!props.editable) {props.onItemChanged(props.id,\"checked\", !props.checked); } }}\n               aria-label={props.checked ? `Unmark ${props.item} as completed.`: `Mark ${props.item} as completed.`}\n        />\n\n        <SelectionMaintainingInput id={props.id}\n                                   className={`${props.editable ? \"editableItem\" : \"nonEditableItem\"} ${props.checked ? \"checked\" : \"unchecked\"}`}\n                                   value={props.item}\n                                   readOnly={!props.editable}\n                                   onChange={(e) => {if (props.editable) {props.onItemChanged(props.id,\n                                       \"item\", e.target.value); }}}\n                                   onClick={() => {if (!props.editable){props.onItemChanged(props.id,\"checked\", !props.checked);}}}/>\n\n        {props.editable ? <select id=\"priorityDropDownEditable\"\n                                  onChange={(e) => props.onItemChanged(props.id,\n                                      \"priority\",\n                                      JSON.parse(e.target.value))\n                                  }\n                                  aria-label={`Edit ${props.item} priority.`}>\n                <option value=\"\">{props.priority.value}</option>\n                {props.priority.value !== \"High\" && <option value=' {\"key\": \"c\", \"value\": \"High\"}'>High</option>}\n                {props.priority.value !== \"Medium\" && <option value=' {\"key\": \"b\", \"value\": \"Medium\"}'>Medium</option>}\n                {props.priority.value !== \"Low\" && <option value=' {\"key\": \"a\", \"value\": \"Low\"}'>Low</option>}\n            </select>\n            :\n            <><p className={`${props.checked ? \"checked\" : \"unchecked\"}`}\n               id=\"priority\">\n                {props.priority.value}</p>\n                <button id=\"deleteItem\"\n                        onClick={() => props.onItemsDeleted([props.id])}\n                        aria-label={`Delete ${props.item}`}> x</button></>\n        }\n\n    </div>\n    return (\n        <div key={props.id}\n            id=\"listItem\">\n            {item}\n        </div>\n    );\n}\nexport default ListItem;","import React from 'react';\nimport \"./Warning.css\"\n\nfunction Warning(props){\n    return (\n        <div className=\"backdrop\">\n            <div className=\"warningPopup\">\n                <p>Are you sure you want to delete all completed items? This action is irreversible.</p>\n                <button tabIndex={1} id=\"cancel\" onClick={props.onClose}\n                        aria-label={\"Do not delete items.\"}\n                >\n                    Cancel\n                </button>\n                <button tabIndex={2}\n                        id=\"confirm\"\n                        onClick={(e)=>\n                        {props.onItemsDeleted(props.data.filter((item) => item.checked).map((item) => item.id));\n                        props.onClose();}}\n                        aria-label={\"Delete all items. This action is irreversible.\"}\n                >\n                    Confirm\n                </button>\n            </div>\n        </div>\n    );\n}\nexport default Warning;","import React, {useState} from 'react';\nimport \"./ShareScreen.css\"\n\nfunction ShareScreen(props){\n    const [emails, setEmails] = useState([]);\n    const [currentEmail, setCurrentEmail] = useState(\"\");\n    const [showShareWithSelfError, setShowShareWithSelfError] = useState(false);\n    const [showShareWithValidError, setShowShareWithValidError] = useState(false);\n    const [showShareWithDuplicateError, setShowShareWithDuplicateError] = useState(false);\n    function checkValidInput(){\n        if (currentEmail !== \"\" && currentEmail !== props.user.email\n            && !(props.showShareScreenEmails.includes(currentEmail))\n            && !(emails.includes(currentEmail))\n            && /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(currentEmail)) {\n            setEmails([...emails, currentEmail]);\n            setCurrentEmail(\"\");\n            setShowShareWithValidError(false);\n            setShowShareWithSelfError(false);\n            setShowShareWithDuplicateError(false);\n        }\n        if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(currentEmail)) {\n            setShowShareWithValidError(true);\n            setShowShareWithSelfError(false);\n            setShowShareWithDuplicateError(false);\n        }\n        if (currentEmail === props.user.email){\n            setShowShareWithSelfError(true);\n            setShowShareWithValidError(false);\n            setShowShareWithDuplicateError(false);\n        }\n        if (props.showShareScreenEmails.includes(currentEmail) || emails.includes(currentEmail)){\n            setShowShareWithDuplicateError(true);\n            setShowShareWithValidError(false);\n            setShowShareWithSelfError(false);\n        }\n\n    }\n    return (\n        <div className=\"backdrop\">\n            <div className=\"sharePopup\">\n                <p id=\"description\"> Who would you like to share this list with? Enter their emails below:</p>\n                <button\n                    id =\"addUser\"\n                    className= {`button ${currentEmail ? \"enabled\" : \"disabled\"}`}\n                    onClick={(e) => {\n                        checkValidInput()\n                    }}\n                > +</button>\n                <input type={'text'}\n                       required\n                       id=\"emailInput\"\n                       placeholder={'Enter email here...'}\n                       onChange={(e) => setCurrentEmail(e.target.value)}\n                       onKeyPress={(e) => {\n                           if (e.key === \"Enter\") {\n                               checkValidInput();\n                           }\n                       }}\n                       value={currentEmail}\n                />\n                {showShareWithSelfError && <p className=\"shareWarning\">You cannot share a list with yourself.</p> }\n                {showShareWithDuplicateError &&\n                    <p className=\"shareWarning\" >This list is already shared with this user.</p>}\n                {showShareWithValidError && <p className=\"shareWarning\">You must enter a valid email.</p>}\n\n                <p id=\"disclaimer\"> Note that these users\n                    will only be able to access a shared list once they have verified their account.</p>\n                <div id=\"shareWith\">\n                    <h3 > Share With:</h3>\n                    <ul className=\"emails\">\n                        {emails.map(a =>\n                            <li className=\"email\"\n                                onClick={() => setEmails(emails.filter((e) => e !== a))}>\n                                {a}\n                            </li>)\n                        }\n                    </ul>\n                </div>\n                <div id=\"alreadyShared\">\n                    <h3> Already Shared With:</h3>\n                    <ul className=\"emails\">\n                        {props.showShareScreenEmails.map(a =>\n                            <li className=\"email\"\n                                onClick={() => props.onListUnshared(props.showShareScreenID, a, true)}>\n                                {a}\n                            </li>)\n                        }\n                    </ul>\n                </div>\n                {/*<ul>{props.showShareScreenEmails.map(a => <li*/}\n                {/*    onClick={props.onListUnshared(props.showShareScreenID, a, true)}>{a}</li>)}</ul>*/}\n\n                <div id =\"buttons\">\n                    {emails.length !== 0 &&\n                        <button\n                            id=\"share\"\n                            onClick={() => {\n                                props.onListShared(props.showShareScreenID, emails);\n                                // setEmails([]);\n                                props.setShowShareScreenID(null);\n\n                            }}\n                        >\n                            Share\n                        </button>\n                    }\n                    <button\n                        id=\"cancelShare\"\n                        onClick ={() => props.setShowShareScreenID(null)}\n                        aria-label={\"Cancel sharing.\"}> Cancel</button>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default ShareScreen;","export default __webpack_public_path__ + \"static/media/share.29ce786d.png\";","import React, {useRef} from 'react';\nimport ListItem from './ListItem.js';\nimport Warning from './Warning.js';\nimport {useState, useEffect} from \"react\";\nimport './List.css';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Toggle from \"react-toggle\";\nimport ShareScreen from \"./ShareScreen\";\nimport share from './share.png';\n\n\nfunction List(props) {\n    const [hideCompletedItems, setHideCompletedItems] = useState(false);\n    const [editable, setEditable] = useState(false);\n    const [showWarning, setShowWarning] = useState(false);\n    const [newItemText, setNewItemText] = useState(\"\");\n    const [newItemPriority, setNewItemPriority] = useState({key: 0, value: \"---\"});\n    const [listNameEditable, setListNameEditable] = useState(false);\n\n    let listItems = props.data.map(a => <ListItem id={a.id}\n                                                  item={a.item}\n                                                  checked={a.checked}\n                                                  editable={editable}\n                                                  onItemChanged={props.onItemChanged}\n                                                  key={a.id}\n                                                  created={a.created}\n                                                  priority={a.priority}\n                                                  onItemsDeleted={props.onItemsDeleted}\n                                                    {...a}/>);\n    const incompleteListItems = listItems.filter((item) => !item.props.checked);\n\n\n\n\n    const sortLabels = {\n        created: {name: \"Creation Date\", desc: \"New → Old\", asc: \"Old → New\"},\n        item: {name: \"Name\", desc: \"Z → A\", asc: \"A → Z\"},\n        priority: {name: \"Priority\", desc: \"High → Low\", asc: \"Low → High\"},\n    };\n    let dropDownOptions = [];\n    for(let field in sortLabels){\n        if (field !== \"order\") {\n            for (let direction of [\"desc\", \"asc\"]) {\n                if (props.sortField !== field || props.sortDirection !== direction) {\n                    dropDownOptions.push(\n                        <option value={`${field} ${direction}`}>Sort\n                            by {sortLabels[field].name}: {sortLabels[field][direction]}</option>);\n                }\n            }\n        }\n    }\n    return (\n        <div id=\"list\">\n            <button id=\"backButton\"\n                    onClick={() => {props.setSelectedListID(\" \"); props.setSelectedListName(\" \");}}\n                    aria-label=\"Back button to see all lists\"\n            >\n                ← </button>\n\n            {listNameEditable ?\n                <div className=\"listName\">\n                    <input value={props.selectedListName}\n                           onChange={(e) => props.onListNameChanged(props.id, e.target.value)}\n                           onKeyPress={(e) => {\n                               if (e.key === \"Enter\"){\n                                   setListNameEditable(false);\n                               }\n                           }}\n                           aria-label=\"Edit List Name\"\n                    >\n                    </input>\n                    <button onClick={() => setListNameEditable(false)}\n                            aria-label=\"Save List Name\">✅</button>\n                </div>\n                :\n                <div className=\"listName\">\n                    <h1 aria-label=\"List Name\">{props.selectedListName} </h1>\n                    <button onClick={() => setListNameEditable(true)}\n                            aria-label=\"Click to Edit List Name\">✏️</button>\n                </div>\n            }\n            {props.showShareScreenEmails && <input type=\"image\"\n                                                   src={share}\n                                                   alt=\"share list\"\n                                                   id=\"shareListsFromList\"\n                                                   onClick={() => props.setShowShareScreenID(props.id)}/>}\n            <div id=\"inputBox_Button\">\n                <button id=\"addItem\"\n                        tabindex=\"-1\"\n                        className={newItemText ? \"enabled\" : \"disabled\"}\n                        onClick={(e)=> {\n                            if (newItemText !== \"\") {\n                                props.onItemAdded(newItemText, newItemPriority);\n                                setNewItemText(\"\");\n                            }\n                        }}>\n                    +\n                </button>\n                <input id = \"inputText\"\n                       type={'text'}\n                       placeholder={\"Enter text here...\"}\n                       onChange={(e) => setNewItemText(e.target.value)}\n                       onKeyPress={(e) => {\n                           if (e.key === \"Enter\") {\n                               if (newItemText !== \"\") {\n                                   props.onItemAdded(newItemText, newItemPriority);\n                                   setNewItemText(\"\");\n                               }\n                           }}}\n                       value={newItemText}\n                       disabled={editable}\n                       aria-label=\"Enter new list item\"\n                />\n            </div>\n                <select id=\"selectPriority\"\n                        onChange={(e) => setNewItemPriority(JSON.parse(e.target.value))}\n                        disabled={editable}\n                        onKeyPress={(e) => {\n                            if (e.key === \"Enter\") {\n                                if (newItemText !== \"\") {\n                                    props.onItemAdded(newItemText, newItemPriority);\n                                    setNewItemText(\"\");\n                                }\n                            }}}\n                        aria-label=\"Select new list item priority\"\n                        >\n                    <option value='{\"key\": \"0\", \"value\": \"--\"}'>--Set Priority--</option>\n                    <option value='{\"key\": \"c\", \"value\": \"High\"}'>High</option>\n                    <option value='{\"key\": \"b\", \"value\": \"Medium\"}'>Medium</option>\n                    <option value='{\"key\": \"a\", \"value\": \"Low\"}'>Low</option>\n                </select>\n\n\n            {listItems.length !== 0 &&\n            <div id=\"sortItems\">\n                <select id=\"sortDropDown\"\n                        onChange={(e) => props.onSortItems(e.target.value)}\n                        disabled={editable}>\n                    <option value=\"\">Sort by {sortLabels[props.sortField].name}: {sortLabels[props.sortField][props.sortDirection]}</option>\n                    {dropDownOptions}\n                </select>\n            </div>\n            }\n\n            {(listItems.length !== 0 || editable) && <div id =\"editButton\">\n                <button onClick={() => setEditable(!editable)}\n                        aria-label={editable ? \"Finished Editing\" : \"Edit List Items\"}> {editable ? \"Done\" : \"Edit Items\"} </button>\n            </div>}\n\n\n            <div id=\"listItems\" >\n                {listItems.length!== 0 &&\n                    <div id=\"labels\">\n                        <h2>Item</h2>\n                        <h2>Priority</h2>\n                    </div>\n                }\n                <CSSTransitionGroup\n                    transitionName=\"fade\"\n                    transitionEnter={10}\n                    transitionLeave={10}>\n                {hideCompletedItems ? incompleteListItems :listItems}\n                </CSSTransitionGroup>\n            </div>\n\n\n            {showWarning && <Warning data={props.data}\n                                     onItemsDeleted={props.onItemsDeleted}\n                                     onClose={() =>setShowWarning(false)}\n            />}\n            {(incompleteListItems.length !== listItems.length) &&\n\n                // <div className=\"completedButtons\">\n                    <div id=\"hideCompletedItems\">\n                        <label className=\"toggleLabel\" htmlFor=\"showCompletedItems\">Hide Completed Items</label>\n                        <Toggle id=\"showCompletedItems\"\n                                onChange={() => setHideCompletedItems(!hideCompletedItems)}/>\n                    </div>\n            }\n            {(incompleteListItems.length !== listItems.length) &&\n            !editable && !hideCompletedItems &&\n            <button id=\"deleteCompleted\"\n                    onClick={() => setShowWarning(true)}>\n                Delete Completed Items\n            </button>\n            }\n            {(props.showShareScreenID !== null) && <ShareScreen\n                onListShared={props.onListShared}\n                showShareScreenID={props.showShareScreenID}\n                setShowShareScreenID={props.setShowShareScreenID}\n                showShareScreenEmails={props.showShareScreenEmails}\n                onListUnshared={props.onListUnshared}\n                user={props.user}\n            />}\n\n        </div>\n\n\n    );\n\n}\nexport default List;","export default __webpack_public_path__ + \"static/media/dropdown.6d70dc3f.png\";","import './Lists.css';\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport React, {useState} from \"react\";\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport {useLoading, Oval} from \"@agney/react-loading\";\nimport share from \"./share.png\";\nimport ShareScreen from \"./ShareScreen\";\nimport './ShareScreen.css';\nimport dropdown from \"./dropdown.png\";\nimport {useMediaQuery} from \"react-responsive\";\n\n\nfunction Lists(props){\n    const [newListText, setNewListText] = useState(\"\");\n    const [showLogout, setShowLogout] = useState(false);\n    const hideUsername = useMediaQuery({maxWidth:650});\n\n    const { containerProps, indicatorEl } = useLoading({\n        loading: true,\n        //Width selector does not work as intended when placed in css Stylesheet\n        indicator: <Oval width=\"30\"/>\n    });\n\n    if (props.loading){\n        return <div className=\"loading\">\n            <h1> Hang tight...</h1>\n            <section {...containerProps}>\n                {indicatorEl} {/* renders only while loading */}\n            </section>\n        </div>\n    }\n\n\n\n    const sortLabels = {\n        created: {name: \"Creation Date\", asc: \"Old → New\", desc: \"New → Old\"},\n        name: {name: \"Name\", desc: \"Z → A\", asc: \"A → Z\"}\n    };\n    let dropDownOptions = [];\n    for(let field in sortLabels){\n        if (field !== \"order\") {\n            for (let direction of [\"desc\", \"asc\"]) {\n                if (props.sortListField !== field || props.sortListDirection !== direction) {\n                    dropDownOptions.push(\n                        <option value={`${field} ${direction}`}>Sort\n                            by {sortLabels[field].name}: {sortLabels[field][direction]}</option>);\n                }\n            }\n        }\n    }\n    function generateLists(a, isOwner){\n        return (<div id=\"li\">\n            <p id=\"listName\"\n               tabIndex={0}\n               onClick={() =>\n               {\n                   props.setSelectedListID(a.id);\n                   props.setSelectedListName(a.name);\n               }}\n               onKeyPress={(e) => {\n                   if(e.key === \"Enter\" || e.key === \" \") {\n                       props.setSelectedListID(a.id);\n                       props.setSelectedListName(a.name);\n                   }\n               }}\n               role=\"button\"\n               aria-label={`Select List with Name ${a.name}`}\n            >{a.name}</p>\n            {isOwner &&\n                <input type='image'\n                       id=\"shareLists\"\n                       src={share}\n                       alt=\"share list\"\n                       onClick={() => {\n                         props.setShowShareScreenID(a.id);\n                         props.setShowShareScreenEmails(a.sharedWith);\n                     }}\n                />\n            }\n            {isOwner && <button className=\"listsButton\" id=\"deleteList\" onClick={() => props.onListDeleted(a.id)}\n                    aria-label={`Delete List with Name ${a.name}`}>x</button>}\n            {!isOwner && <button className=\"listsButton\" onClick={() => props.onListUnshared(a.id, props.user.email, false)}> Unshare with Me</button>}\n        </div>);\n    }\n    const yourLists = props.data.map(a => generateLists(a, true));\n    const sharedLists = props.sharedData.map(a => generateLists(a,false));\n\n    return (<div id=\"lists\">\n            <h1>To-Do Lists</h1>\n                {hideUsername ?\n                    <div id=\"verifyAndLogout\">\n                        {!props.user.emailVerified && <button type=\"button\" id=\"verify\" onClick={props.verifyEmail}>Verify email</button>}\n                        <button type=\"button\" id=\"alternateLogOut\" onClick={() => props.auth.signOut()}>Log Out</button>\n                    </div>\n                    :\n                    <div id=\"usernameLogOut\">\n                        <p id=\"username\"\n                           onClick={() => setShowLogout(!showLogout)}\n                        >{!hideUsername && props.user.email}<input type=\"image\" src={dropdown} alt=\"dropdown\"/></p>\n\n                        {showLogout && !props.user.emailVerified && <button type=\"button\" id=\"verify\" onClick={props.verifyEmail}>Verify email</button>}\n                        {showLogout && <button type=\"button\" id=\"logOut\" onClick={() => props.auth.signOut()}>Log Out</button>}\n                    </div>\n                }\n\n            <div id=\"newListComponents\">\n                <button id=\"addList\"\n                        tabIndex=\"-1\"\n                        className= {`listsButton ${newListText ? \"enabled\" : \"disabled\"}`}\n                        onClick={(e)=> {\n                            if (newListText !== \"\") {\n                                props.onListAdded(newListText);\n                                setNewListText(\"\");\n                            }\n                        }}\n                >\n                    +\n                </button>\n                <input id = \"inputList\"\n                       type={'text'}\n                       placeholder={\"Create New List...\"}\n                       aria-label={`Create new List with name ${newListText}`}\n                       onChange={(e) => setNewListText(e.target.value)}\n                       onKeyPress={(e) => {\n                           if (e.key === \"Enter\") {\n                               if (newListText !== \"\") {\n                                   props.onListAdded(newListText);\n                                   setNewListText(\"\");\n                               }\n                           }}}\n                       value={newListText}\n                      />\n            </div>\n            {yourLists.length + sharedLists.length !== 0 &&\n                <div id=\"sortList\">\n                    <select id=\"sortDropDown\"\n                            onChange={(e) => props.onSortLists(e.target.value)}\n                    >\n                        <option value=\"\">Sort by {sortLabels[props.sortListField].name}:\n                            {sortLabels[props.sortListField][props.sortListDirection]}</option>\n                        {dropDownOptions}\n                    </select>\n                </div>\n            }\n\n            <div id=\"listsDiv\">\n                <h2 id=\"yourListsHeader\">Your Lists</h2>\n                <div className=\"lists\">\n                    <CSSTransitionGroup\n                        transitionName=\"fade\"\n                        transitionEnter={300}\n                        transitionLeave={300}>\n                        {yourLists}\n                    </CSSTransitionGroup>\n                </div>\n                <h2 id=\"sharedLists\">Lists Shared with You</h2>\n                <div className=\"lists\">\n                    <CSSTransitionGroup\n                        transitionName=\"fade\"\n                        transitionEnter={300}\n                        transitionLeave={300}>\n                        {sharedLists}\n                    </CSSTransitionGroup>\n                </div>\n            </div>\n            {(props.showShareScreenID !== null) && <ShareScreen\n                onListShared={props.onListShared}\n                showShareScreenID={props.showShareScreenID}\n                setShowShareScreenID={props.setShowShareScreenID}\n                showShareScreenEmails={props.showShareScreenEmails}\n                onListUnshared={props.onListUnshared}\n                user={props.user}\n            />}\n\n\n        </div>\n    );\n}\nexport default Lists;","export default __webpack_public_path__ + \"static/media/google-logo.0590aaf0.png\";","import React, {useState} from 'react';\nimport List from \"./List.js\";\nimport Lists from \"./Lists\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {CSSTransitionGroup} from \"react-transition-group\";\nimport {useLoading, Oval} from \"@agney/react-loading\";\nimport { useAuthState,\n    useSignInWithEmailAndPassword,\n    useCreateUserWithEmailAndPassword\n} from \"react-firebase-hooks/auth\";\nimport './App.css';\nimport googleLogo from\"./google-logo.png\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB6K4Ycqr1bST4Zkkr_tTKRzEOQ5n9aY6o\",\n    authDomain: \"cs124-lab3-33ef0.firebaseapp.com\",\n    projectId: \"cs124-lab3-33ef0\",\n    storageBucket: \"cs124-lab3-33ef0.appspot.com\",\n    messagingSenderId: \"283056924726\",\n    appId: \"1:283056924726:web:12cc1133aa2ec5ffba1097\",\n    measurementId: \"G-E3QVKSNMGJ\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nconst collectionName = \"to-do-list\";\nconst listsCollectionName = \"lists5\";\n\nfunction App() {\n    const [user, loading, error] = useAuthState(auth);\n    const { containerProps, indicatorEl } = useLoading({\n        loading: true,\n        //Width selector does not work as intended when placed in css Stylesheet\n        indicator: <Oval width=\"30\"/>\n    });\n\n    function verifyEmail() {\n        auth.currentUser.sendEmailVerification();\n    }\n\n    if (loading){\n        return (<div className=\"loading\">\n                <h1> Hang tight...</h1>\n                <section {...containerProps}>\n                    {indicatorEl} {/* renders only while loading */}\n                </section>\n            </div>\n        )\n    }\n    else if (user) {\n        return (<div>\n            <SignedInApp user={user} verifyEmail={verifyEmail}/>\n        </div>)\n    }\n    else {\n        return <div id=\"signInPage\">\n            {error && <p>Error App: {error.message}</p>}\n            <h1 id=\"title\">To-Do List</h1>\n            <div id=\"signInUp\">\n                <div id=\"signIn\">\n                    <h2>Have an account? Sign in!</h2>\n                    <SignIn key=\"Sign In\"/>\n                </div>\n                <div id='signUp'>\n                    <h2>Don't have one? Sign up!</h2>\n                    <SignUp key=\"Sign Up\"/>\n                </div>\n            </div>\n        </div>\n    }\n\n}\nfunction SignIn() {\n    const [\n        signInWithEmailAndPassword,\n        userCredential, loading, error\n    ] = useSignInWithEmailAndPassword(auth);\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(null);\n    const isNarrow = useMediaQuery({maxWidth:540});\n\n    if (userCredential) {\n        // Shouldn't happen because App should see that\n        // we are signed in.\n        return <div>Unexpectedly signed in already</div>\n    } else if (loading) {\n        return <p>Logging in…</p>\n    }\n    return <div>\n        {error && <p>\"Error logging in: \" {error.message}</p>}\n        <div className=\"inputs\">\n            <input type={\"text\"}\n                   id={\"email\"}\n                   placeholder={\"Email\"}\n                   onChange={(e) => setEmail(e.target.value)}\n            />\n            <input type={\"password\"}\n                   id={\"password\"}\n                   placeholder={\"Password\"}\n                   onChange={(e) => setPassword(e.target.value)}\n                   onKeyPress={(e) => {\n                       if (e.key === \"Enter\"){\n                           signInWithEmailAndPassword(email, password);\n                       }\n                   }\n                   }\n            />\n        </div>\n        <button className=\"submit\"\n            onClick={() =>\n            signInWithEmailAndPassword(email, password)}>\n            Log in\n        </button>\n        <p id=\"or\"><span>or</span></p>\n        <button id=\"logInGoogle\"\n                className=\"submit\"\n                onClick={() =>\n                    auth.signInWithPopup(googleProvider)}>\n                    <img id=\"googleLogo\" src={googleLogo} alt=\"Login with Google\"/>\n            {!isNarrow && \"Login with Google\"}\n        </button>\n    </div>\n}\n\nfunction SignUp() {\n    const [\n        createUserWithEmailAndPassword,\n        userCredential, loading, error\n    ] = useCreateUserWithEmailAndPassword(auth);\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(\"\");\n    const [verifyPassword,setVerifyPassword] = useState(null);\n    const [noMatch, setNoMatch] = useState(false);\n    const [tooShort, setTooShort] = useState(false);\n\n    if (userCredential) {\n        // Shouldn't happen because App should see that\n        // we are signed in.\n        return <div>Unexpectedly signed in already</div>\n    } else if (loading) {\n        return <p>Signing up…</p>\n    }\n    return <div>\n        {error && <p>\"Error signing up: \" {error.message}</p>}\n        <div className=\"inputs\">\n            <input type={\"text\"}\n                   id={\"email\"}\n                   placeholder={\"Email\"}\n                   onChange={(e) => setEmail(e.target.value)}\n            />\n            <input type={\"password\"}\n                   id={\"password\"}\n                   placeholder={\"Password\"}\n                   onChange={(e) => setPassword(e.target.value)}\n            />\n            <input type={\"password\"}\n                   id={\"verify password\"}\n                   placeholder={\"Verify Password\"}\n                   onChange={(e) => {setVerifyPassword(e.target.value)}}\n            />\n            {password.length > 0 ?\n                password === verifyPassword ? password.length < 9 ? <p className=\"passwordHint\">Passwords must be greater than 8 characters.</p> :\n                    <p className=\"passwordHint\">Passwords match!</p> :\n                    <p className=\"passwordHint\">Oops, your passwords don't match...</p> : \"\"}\n\n            {noMatch && <p> Passwords must match.</p>}\n            {tooShort && <p> Password must be greater than 8 characters.</p>}\n        </div>\n        <button className=\"submit\"\n            onClick={() =>{\n            if (password === verifyPassword) {\n\n                if (password.length > 8) {\n                    createUserWithEmailAndPassword(email, password);\n                }\n                else {\n                    setTooShort(true);\n            }\n\n            }\n            else{\n                setNoMatch(true);\n            }\n        }}>\n            Sign Up\n        </button>\n\n    </div>\n}\n\nfunction SignedInApp(props) {\n    const [selectedListID,setSelectedListID] = useState(\" \");\n    const [selectedListName, setSelectedListName] = useState(\" \");\n    const [sortItemsField, setSortItemsField] = useState(\"created\");\n    const [sortItemsDirection, setSortItemsDirection] = useState(\"desc\");\n    const [sortListField, setSortListField] = useState(\"created\");\n    const [sortListDirection, setSortListDirection] = useState(\"desc\");\n\n    const [showShareScreenID, setShowShareScreenID] = useState(null);\n    const [showShareScreenEmails, setShowShareScreenEmails] = useState([]);\n\n    //queries for List Component\n    const listQuery = db.collection(listsCollectionName).doc(selectedListID)\n        .collection(collectionName).orderBy(sortItemsField, sortItemsDirection);\n    const listCollection = db.collection(listsCollectionName).doc(selectedListID).collection(collectionName);\n    const [listValue, listLoading, listError] = useCollection(listQuery);\n\n    //queries for Lists Component\n    const listsQuery = db.collection(listsCollectionName)\n        .where('owner', '==', props.user.uid)\n        .orderBy(sortListField, sortListDirection);\n    const listsCollection = db.collection(listsCollectionName);\n    const [listsValue, listsLoading, listsError] = useCollection(listsQuery);\n\n    //queries for shared Lists - need to be passed to lists\n    const sharedQuery = db.collection(listsCollectionName)\n        .where(\"sharedWith\", \"array-contains\", props.user.email)\n        .orderBy(sortListField, sortListDirection);\n    const [sharedValue, sharedLoading, sharedError] = useCollection(sharedQuery);\n\n\n    let listData = [];\n    let listsData = [];\n    let sharedData = [];\n\n    if (listValue) {\n        listData = listValue.docs.map(a => a.data());\n    }\n    if (listsValue) {\n        listsData = listsValue.docs.map(a => a.data());\n    }\n\n    if (sharedValue && props.user.emailVerified) {\n        sharedData = sharedValue.docs.map(a => a.data());\n    }\n\n    function onListAdded(listName) {\n        const newId = generateUniqueID();\n        let newList = {id: newId,\n            name: listName,\n            created: firebase.firestore.FieldValue.serverTimestamp(),\n            owner: props.user.uid,\n            sharedWith: []\n        };\n        const docRef = db.collection(listsCollectionName).doc(newId);\n        docRef.set(newList);\n    }\n    function onListDeleted(listId) {\n        const docRef = db.collection(listsCollectionName).doc(listId);\n        let idsToDelete = listData.map(a => a.id);\n        onItemsDeleted(idsToDelete);\n        docRef.delete();\n\n    }\n    function onListNameChanged(listId, newName) {\n        setSelectedListName(newName);\n        const docRef = db.collection(listsCollectionName).doc(listId);\n        docRef.update({name: newName});\n    }\n    function onListShared(listId, emails){\n        const docRef = db.collection(listsCollectionName).doc(listId);\n        const list = listsData.filter(a => a.id === listId);\n        emails = emails.filter(a => a !== props.user.email);\n        docRef.update({sharedWith: [...list[0].sharedWith, ...emails]});\n    }\n    function onListUnshared(listId, email, isOwner){\n        const docRef = db.collection(listsCollectionName).doc(listId);\n        let list = [];\n        if (isOwner){\n            list = listsData.filter(a => a.id === listId);\n        }\n        else{\n            list = sharedData.filter(a => a.id === listId);\n        }\n        docRef.update({sharedWith: list[0].sharedWith.filter(a => a !== email)});\n        setShowShareScreenEmails(showShareScreenEmails.filter(a => a !== email));\n    }\n\n    function onItemAdded(item, priority) {\n        const newId = generateUniqueID();\n        let newItem = {id: newId,\n            item: item,\n            checked: false,\n            created: firebase.firestore.FieldValue.serverTimestamp(),\n            priority: priority\n        };\n        const docRef = listCollection.doc(newId);\n        docRef.set(newItem);\n    }\n\n    function onItemsDeleted(ids) {\n        for(let id of ids) {\n            const docRef = listCollection.doc(id);\n            docRef.delete();\n        }\n    }\n\n    function onSortLists(sort) {\n        const [newSortField, newSortDirection] = sort.split(' ');\n        setSortListField(newSortField);\n        setSortListDirection(newSortDirection);\n    }\n\n    function onSortItems(sort) {\n        const [newSortField, newSortDirection] = sort.split(' ');\n        setSortItemsField(newSortField);\n        setSortItemsDirection(newSortDirection);\n    }\n\n    function onItemChanged(id, field, newVal){\n        const docRef = listCollection.doc(id);\n        docRef.update({[field]:newVal});\n    }\n\n    const { containerProps, indicatorEl } = useLoading({\n        loading: true,\n        //Width selector does not work as intended when placed in css Stylesheet\n        indicator: <Oval width=\"30\"/>\n    });\n\n    if (listLoading){\n        return (<div className=\"loading\">\n                <h1> Hang tight...</h1>\n                <section {...containerProps}>\n                    {indicatorEl} {/* renders only while loading */}\n                </section>\n            </div>\n        )\n    }\n\n    return (\n        <div id=\"app\">\n        {selectedListID !== \" \" ?\n            <CSSTransitionGroup\n                transitionName=\"fade\"\n            transitionEnter={300}\n            transitionLeave={300}>\n                <List data={listData}\n                      id={selectedListID}\n                      onItemAdded={onItemAdded}\n                      onItemsDeleted={onItemsDeleted}\n                      onItemChanged={onItemChanged}\n                      onSortItems={onSortItems}\n                      onListNameChanged={onListNameChanged}\n                      sortDirection={sortItemsDirection}\n                      sortField={sortItemsField}\n                      setSelectedListID={setSelectedListID}\n                      selectedListName={selectedListName}\n                      setSelectedListName={setSelectedListName}\n                      onListShared={onListShared}\n                      onListUnshared={onListUnshared}\n                      showShareScreenID={showShareScreenID}\n                      setShowShareScreenID={setShowShareScreenID}\n                      showShareScreenEmails={listsData.filter(a => a.id === selectedListID).length > 0 ?  listsData.filter(a => a.id === selectedListID)[0].sharedWith : null}\n                >\n                </List>\n            </CSSTransitionGroup>\n                :\n                <Lists db={db}\n                       loading={listsLoading}\n                       error={listsError}\n                       data={listsData}\n                       sharedData={sharedData}\n                       sharedLoading={sharedLoading}\n                       sharedError={sharedError}\n                       user={props.user}\n                       auth={auth}\n                       verifyEmail={props.verifyEmail}\n                       collectionName={listsCollectionName}\n                       setSelectedListID={setSelectedListID}\n                       setSelectedListName={setSelectedListName}\n                       collection={listCollection}\n                       onListAdded={onListAdded}\n                       onListDeleted={onListDeleted}\n                       sortListField={sortListField}\n                       sortListDirection={sortListDirection}\n                       setSortListField={setSortListField}\n                       setSortListDiretion={setSortListDirection}\n                       onSortLists={onSortLists}\n                       onListShared={onListShared}\n                       onListUnshared={onListUnshared}\n                       showShareScreenID={showShareScreenID}\n                       setShowShareScreenID={setShowShareScreenID}\n                       showShareScreenEmails={showShareScreenEmails}\n                       setShowShareScreenEmails={setShowShareScreenEmails}\n                >\n                </Lists>\n        }\n        </div>\n\n    )\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\n\nconst initialData = [\n    {\n        id: 0,\n        item: \"Buy new John Grisham Book\",\n        checked: false\n    },\n    {\n        id: 1,\n        item: \"Buy newer John Grisham Book\",\n        checked: true\n    }\n];\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App initialData={initialData}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}