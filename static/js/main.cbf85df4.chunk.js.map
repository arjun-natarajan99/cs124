{"version":3,"sources":["ListItem.js","Warning.js","List.js","InMemoryApp.js","reportWebVitals.js","index.js"],"names":["ListItem","props","item","id","editable","type","checked","disabled","onChange","e","onItemChanged","className","value","readOnly","target","onClick","JSON","parse","priority","onItemsDeleted","Warning","onClose","data","filter","map","List","useState","hideCompletedItems","setHideCompletedItems","setEditable","showWarning","setShowWarning","newItemText","setNewItemText","key","newItemPriority","setNewItemPriority","listItems","a","created","incompleteListItems","sortLabels","name","desc","asc","dropDownOptions","field","direction","sortField","sortDirection","push","length","onSortItems","onItemAdded","placeholder","transitionName","transitionEnter","transitionLeave","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","collectionName","InMemoryApp","setSortField","setSortDirection","query","collection","orderBy","useCollection","loading","docs","newId","generateUniqueID","newItem","database","ServerValue","TIMESTAMP","doc","set","ids","delete","newVal","update","sort","split","newSortField","newSortDirection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","initialData","document","getElementById"],"mappings":"sSA8CeA,MA3Cf,SAAkBC,GACd,IAAIC,EAAO,sBAAKC,GAAIF,EAAMG,SAAW,gBAAkB,mBAA5C,UACP,uBAAOC,KAAM,WACNF,GAAIF,EAAME,GACVG,QAASL,EAAMK,QACfC,SAAUN,EAAMG,SAChBI,SAAU,SAACC,GAAYR,EAAMG,UAAWH,EAAMS,cAAcT,EAAME,GAAG,WAAYF,EAAMK,YAE9F,0BACIH,GAAIF,EAAME,GACVQ,UAAS,UAAKV,EAAMG,SAAW,eAAiB,kBAAvC,YAA4DH,EAAMK,QAAU,UAAY,aACjGM,MAAOX,EAAMC,KACbW,UAAWZ,EAAMG,SACjBI,SAAU,SAACC,GAAWR,EAAMG,UAAWH,EAAMS,cAAcT,EAAME,GAC7D,OAAQM,EAAEK,OAAOF,QACrBG,QAAS,WAAYd,EAAMG,UAAUH,EAAMS,cAAcT,EAAME,GAAG,WAAYF,EAAMK,YAGvFL,EAAMG,SAAW,yBAAQD,GAAG,2BACHK,SAAU,SAACC,GAAD,OAAOR,EAAMS,cAAcT,EAAME,GACvC,WACAa,KAAKC,MAAMR,EAAEK,OAAOF,SAHhC,UAKV,wBAAQA,MAAM,GAAd,SAAkBX,EAAMiB,SAASN,QACP,SAAzBX,EAAMiB,SAASN,OAAoB,wBAAQA,MAAM,iCAAd,kBACV,WAAzBX,EAAMiB,SAASN,OAAsB,wBAAQA,MAAM,mCAAd,oBACZ,QAAzBX,EAAMiB,SAASN,OAAmB,wBAAQA,MAAM,gCAAd,oBAGvC,qCAAE,mBAAGD,UAAS,UAAKV,EAAMK,QAAU,UAAY,aAC5CH,GAAG,WADJ,SAEGF,EAAMiB,SAASN,QAChB,wBAAQT,GAAG,aAAaY,QAAS,kBAAMd,EAAMkB,eAAe,CAAClB,EAAME,MAAnE,sBAIZ,OACI,qBACIA,GAAG,WADP,SAEKD,GAFKD,EAAME,K,MCnBTiB,MAlBf,SAAiBnB,GACb,OACI,qBAAKU,UAAU,WAAf,SACI,sBAAKR,GAAG,UAAR,UACI,kHACA,wBAAQA,GAAG,SAASY,QAASd,EAAMoB,QAAnC,oBAGA,wBAAQlB,GAAG,UAAUY,QAAS,SAACN,GACtBR,EAAMkB,eAAelB,EAAMqB,KAAKC,QAAO,SAACrB,GAAD,OAAUA,EAAKI,WAASkB,KAAI,SAACtB,GAAD,OAAUA,EAAKC,OACnFF,EAAMoB,WAFd,2B,gBC+HDI,MAnIf,SAAcxB,GACV,MAAoDyB,oBAAS,GAA7D,mBAAOC,EAAP,KAA2BC,EAA3B,KACA,EAAgCF,oBAAS,GAAzC,mBAAOtB,EAAP,KAAiByB,EAAjB,KACA,EAAsCH,oBAAS,GAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KACA,EAAsCL,mBAAS,IAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KACA,EAA8CP,mBAAS,CAACQ,IAAK,EAAGtB,MAAO,OAAvE,mBAAOuB,EAAP,KAAwBC,EAAxB,KAEIC,EAAYpC,EAAMqB,KAAKE,KAAI,SAAAc,GAAC,OAAI,cAAC,EAAD,aAAUnC,GAAImC,EAAEnC,GACJD,KAAMoC,EAAEpC,KACRI,QAASgC,EAAEhC,QACXF,SAAUA,EACVM,cAAeT,EAAMS,cAErB6B,QAASD,EAAEC,QACXrB,SAAUoB,EAAEpB,SACZC,eAAgBlB,EAAMkB,gBAClBmB,GAJCA,EAAEnC,OAKjDqC,EAAsBH,EAAUd,QAAO,SAACrB,GAAD,OAAWA,EAAKD,MAAMK,WAC7DmC,EAAa,CACfF,QAAS,CAACG,KAAM,gBAAiBC,KAAM,iBAAaC,IAAK,kBACzD1C,KAAM,CAACwC,KAAM,OAAQC,KAAM,aAASC,IAAK,cACzC1B,SAAU,CAACwB,KAAM,WAAYC,KAAM,kBAAcC,IAAK,oBAEtDC,EAAkB,GACtB,IAAI,IAAIC,KAASL,EACb,GAAc,UAAVK,EACA,cAAsB,CAAC,OAAQ,OAA/B,eAAuC,CAAlC,IAAIC,EAAS,KACV9C,EAAM+C,YAAcF,GAAS7C,EAAMgD,gBAAkBF,GACrDF,EAAgBK,KACZ,yBAAQtC,MAAK,UAAKkC,EAAL,YAAcC,GAA3B,qBACQN,EAAWK,GAAOJ,KAD1B,KACkCD,EAAWK,GAAOC,OAKxE,OACI,sBAAK5C,GAAG,OAAR,UACI,4CAEsB,IAArBkC,EAAUc,QACX,qBAAKhD,GAAG,OAAR,SACI,yBAAQA,GAAG,mBACHK,SAAU,SAACC,GAAD,OAAOR,EAAMmD,YAAY3C,EAAEK,OAAOF,QAC5CL,SAAUH,EAFlB,UAGI,yBAAQQ,MAAM,GAAd,qBAA0B6B,EAAWxC,EAAM+C,WAAWN,KAAtD,KAA8DD,EAAWxC,EAAM+C,WAAW/C,EAAMgD,kBAC/FJ,OAKT,sBAAK1C,GAAG,kBAAR,UACI,wBAAQA,GAAG,UACHQ,UAAWqB,EAAc,UAAY,WACrCjB,QAAS,SAACN,GACc,KAAhBuB,IACA/B,EAAMoD,YAAYrB,EAAaG,GAC/BF,EAAe,MAL/B,eAUA,uBAAO9B,GAAK,YACLE,KAAM,OACNiD,YAAa,qBACb9C,SAAU,SAACC,GAAD,OAAOwB,EAAexB,EAAEK,OAAOF,QACzCA,MAAOoB,EACPzB,SAAUH,IACjB,yBAAQD,GAAG,iBACHK,SAAU,SAACC,GAAD,OAAO2B,EAAmBpB,KAAKC,MAAMR,EAAEK,OAAOF,SACxDL,SAAUH,EAFlB,UAII,wBAAQQ,MAAM,8BAAd,8BACA,wBAAQA,MAAM,gCAAd,kBACA,wBAAQA,MAAM,kCAAd,oBACA,wBAAQA,MAAM,+BAAd,uBAKc,IAArByB,EAAUc,QAAgB,qBAAKhD,GAAI,aAAT,SACvB,yBAAQY,QAAS,kBAAMc,GAAazB,IAApC,cAAiDA,EAAW,OAAS,aAArE,SAGJ,sBAAKD,GAAG,YAAR,UACyB,IAApBkC,EAAUc,QACP,sBAAKhD,GAAG,SAAR,UACI,sCACA,6CAGR,cAAC,qBAAD,CACIoD,eAAe,OACfC,gBAAiB,IACjBC,gBAAiB,IAHrB,SAIC9B,EAAqBa,EAAqBH,OAK9CP,GAAe,cAAC,EAAD,CAASR,KAAMrB,EAAMqB,KACZH,eAAgBlB,EAAMkB,eACtBE,QAAS,kBAAKU,GAAe,MAEpDS,EAAoBW,SAAWd,EAAUc,QAEvC,sBAAKxC,UAAU,mBAAf,UAEMgB,EAIE,wBAAQxB,GAAG,gBAAgBY,QAAS,kBAAMa,GAAuBD,IAAjE,kCAHA,wBAAQxB,GAAG,gBAAgBY,QAAS,kBAAMa,GAAuBD,IAAjE,mCAOFvB,IAAauB,GACf,wBAAQxB,GAAG,kBACHY,QAAS,kBAAMgB,GAAe,IADtC,2C,wBC3GpB2B,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAInB,IAAMC,EAAKT,IAASU,YACdC,EAAiB,aA8DRC,MA5Df,SAAqBrE,GACjB,MAAkCyB,mBAAS,WAA3C,mBAAOsB,EAAP,KAAkBuB,EAAlB,KACA,EAA0C7C,mBAAS,QAAnD,mBAAOuB,EAAP,KAAsBuB,EAAtB,KACMC,EAAQN,EAAGO,WAAWL,GAAgBM,QAAQ3B,EAAWC,GACzDyB,EAAaP,EAAGO,WAAWL,GACjC,EAAgCO,YAAcH,GAA9C,mBAAO7D,EAAP,KAAciE,EAAd,KA+BA,GA/BA,KA+BIA,EACA,OAAO,8BACH,6CAIR,IAAIvD,EAAO,KAMX,OAJIV,IACAU,EAAOV,EAAMkE,KAAKtD,KAAI,SAAAc,GAAC,OAAIA,EAAEhB,WAG1B,cAAC,EAAD,CAAMA,KAAMA,EACN+B,YA1Cb,SAAqBnD,EAAMgB,GACvB,IAAM6D,EAAQC,cACVC,EAAU,CAAC9E,GAAI4E,EACf7E,KAAKA,EACLI,SAAS,EACTiC,QAASmB,IAASwB,SAASC,YAAYC,UACvClE,SAAUA,GACCwD,EAAWW,IAAIN,GACvBO,IAAIL,IAmCF9D,eAhCb,SAAwBoE,GAAM,IAAD,gBACXA,GADW,IACzB,IAAI,EAAJ,qBAAmB,CAAC,IAAZpF,EAAW,QACAuE,EAAWW,IAAIlF,GACvBqF,UAHc,gCAiChB9E,cApBb,SAAuBP,EAAI2C,EAAO2C,GACff,EAAWW,IAAIlF,GACvBuF,OAAP,eAAgB5C,EAAO2C,KAmBdrC,YA3Bb,SAAqBuC,GACjB,MAAyCA,EAAKC,MAAM,KAApD,mBAAOC,EAAP,KAAqBC,EAArB,KACAvB,EAAasB,GACbrB,EAAiBsB,IAyBR7C,cAAeA,EACfD,UAAWA,KC9Db+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCadQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,CAAaC,YAhBC,CAChB,CACIxG,GAAI,EACJD,KAAM,4BACNI,SAAS,GAEb,CACIH,GAAI,EACJD,KAAM,8BACNI,SAAS,QASfsG,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.cbf85df4.chunk.js","sourcesContent":["import React from 'react';\nimport './ListItem.css';\n\nfunction ListItem(props) {\n    let item = <div id={props.editable ? \"editableItems\" : \"nonEditableItems\"}>\n        <input type={'checkbox'}\n               id={props.id}\n               checked={props.checked}\n               disabled={props.editable}\n               onChange={(e) => {if (!props.editable) {props.onItemChanged(props.id,\"checked\", !props.checked); } }}\n        />\n        <textarea\n            id={props.id}\n            className={`${props.editable ? \"editableItem\" : \"nonEditableItem\"} ${props.checked ? \"checked\" : \"unchecked\"}`}\n            value={props.item}\n            readOnly={!props.editable}\n            onChange={(e) => {if (props.editable) {props.onItemChanged(props.id,\n                \"item\", e.target.value); }}}\n            onClick={() => {if (!props.editable){props.onItemChanged(props.id,\"checked\", !props.checked);}}}\n        />\n\n        {props.editable ? <select id=\"priorityDropDownEditable\"\n                                  onChange={(e) => props.onItemChanged(props.id,\n                                      \"priority\",\n                                      JSON.parse(e.target.value))\n                                  }>\n                <option value=\"\">{props.priority.value}</option>\n                {props.priority.value !== \"High\" && <option value=' {\"key\": \"c\", \"value\": \"High\"}'>High</option>}\n                {props.priority.value !== \"Medium\" && <option value=' {\"key\": \"b\", \"value\": \"Medium\"}'>Medium</option>}\n                {props.priority.value !== \"Low\" && <option value=' {\"key\": \"a\", \"value\": \"Low\"}'>Low</option>}\n            </select>\n            :\n            <><p className={`${props.checked ? \"checked\" : \"unchecked\"}`}\n               id=\"priority\">\n                {props.priority.value}</p>\n                <button id=\"deleteItem\" onClick={() => props.onItemsDeleted([props.id])}> x</button></>\n        }\n\n    </div>\n    return (\n        <div key={props.id}\n            id=\"listItem\">\n            {item}\n        </div>\n    );\n}\nexport default ListItem;","import React from 'react';\nimport \"./Warning.css\"\n\nfunction Warning(props){\n    return (\n        <div className=\"backdrop\">\n            <div id=\"warning\">\n                <p>Are you sure you want to delete all completed items? This action is irreversible.</p>\n                <button id=\"cancel\" onClick={props.onClose}>\n                    Cancel\n                </button>\n                <button id=\"confirm\" onClick={(e)=>\n                        {props.onItemsDeleted(props.data.filter((item) => item.checked).map((item) => item.id));\n                        props.onClose();}\n                }>\n                    Confirm\n                </button>\n            </div>\n        </div>\n    );\n}\nexport default Warning;","import React from 'react';\nimport ListItem from './ListItem.js';\nimport Warning from './Warning.js';\nimport {useState} from \"react\";\nimport './List.css';\nimport { CSSTransitionGroup } from 'react-transition-group'\n\nfunction List(props) {\n    const [hideCompletedItems, setHideCompletedItems] = useState(false);\n    const [editable, setEditable] = useState(false);\n    const [showWarning, setShowWarning] = useState(false);\n    const [newItemText, setNewItemText] = useState(\"\");\n    const [newItemPriority, setNewItemPriority] = useState({key: 0, value: \"--\"});\n\n    let listItems = props.data.map(a => <ListItem id={a.id}\n                                                    item={a.item}\n                                                    checked={a.checked}\n                                                    editable={editable}\n                                                    onItemChanged={props.onItemChanged}\n                                                    key={a.id}\n                                                    created={a.created}\n                                                    priority={a.priority}\n                                                    onItemsDeleted={props.onItemsDeleted}\n                                                    {...a}/>);\n    const incompleteListItems = listItems.filter((item) => !item.props.checked);\n    const sortLabels = {\n        created: {name: \"Creation Date\", desc: \"New → Old\", asc: \"Old → New\"},\n        item: {name: \"Name\", desc: \"Z → A\", asc: \"A → Z\"},\n        priority: {name: \"Priority\", desc: \"High → Low\", asc: \"Low → High\"},\n    };\n    let dropDownOptions = [];\n    for(let field in sortLabels){\n        if (field !== \"order\") {\n            for (let direction of [\"desc\", \"asc\"]) {\n                if (props.sortField !== field || props.sortDirection !== direction) {\n                    dropDownOptions.push(\n                        <option value={`${field} ${direction}`}>Sort\n                            by {sortLabels[field].name}: {sortLabels[field][direction]}</option>);\n                }\n            }\n        }\n    }\n    return (\n        <div id=\"list\">\n            <h1>To-Do List</h1>\n\n            {listItems.length !== 0 &&\n            <div id=\"sort\">\n                <select id=\"priorityDropDown\"\n                        onChange={(e) => props.onSortItems(e.target.value)}\n                        disabled={editable}>\n                    <option value=\"\">Sort by {sortLabels[props.sortField].name}: {sortLabels[props.sortField][props.sortDirection]}</option>\n                    {dropDownOptions}\n                </select>\n            </div>\n            }\n\n            <div id=\"inputBox_Button\">\n                <button id=\"addItem\"\n                        className={newItemText ? \"enabled\" : \"disabled\"}\n                        onClick={(e)=> {\n                            if (newItemText !== \"\") {\n                                props.onItemAdded(newItemText, newItemPriority);\n                                setNewItemText(\"\");\n                            }\n                        }}>\n                    +\n                </button>\n                <input id = \"inputText\"\n                       type={'text'}\n                       placeholder={\"Enter text here...\"}\n                       onChange={(e) => setNewItemText(e.target.value)}\n                       value={newItemText}\n                       disabled={editable}/>\n                <select id=\"selectPriority\"\n                        onChange={(e) => setNewItemPriority(JSON.parse(e.target.value))}\n                        disabled={editable}\n                        >\n                    <option value='{\"key\": \"0\", \"value\": \"--\"}'>--Set Priority--</option>\n                    <option value='{\"key\": \"c\", \"value\": \"High\"}'>High</option>\n                    <option value='{\"key\": \"b\", \"value\": \"Medium\"}'>Medium</option>\n                    <option value='{\"key\": \"a\", \"value\": \"Low\"}'>Low</option>\n                </select>\n            </div>\n\n\n            {listItems.length !== 0 && <div id =\"editButton\">\n                <button onClick={() => setEditable(!editable)}> {editable ? \"Done\" : \"Edit Items\"} </button>\n            </div>}\n\n            <div id=\"listItems\" >\n                {listItems.length!== 0 &&\n                    <div id=\"labels\">\n                        <h2>Item</h2>\n                        <h2>Priority</h2>\n                    </div>\n                }\n                <CSSTransitionGroup\n                    transitionName=\"fade\"\n                    transitionEnter={300}\n                    transitionLeave={300}>\n                {hideCompletedItems ? incompleteListItems :listItems}\n                </CSSTransitionGroup>\n            </div>\n\n\n            {showWarning && <Warning data={props.data}\n                                     onItemsDeleted={props.onItemsDeleted}\n                                     onClose={() =>setShowWarning(false)}\n            />}\n            {(incompleteListItems.length !== listItems.length) &&\n\n                <div className=\"completedButtons\">\n\n                    {!hideCompletedItems ?\n                        <button id=\"hideCompleted\" onClick={() => setHideCompletedItems(!hideCompletedItems)}>\n                        Hide Completed Items\n                        </button> :\n                        <button id=\"showCompleted\" onClick={() => setHideCompletedItems(!hideCompletedItems)}>\n                        Show Completed Items\n                        </button>\n                    }\n                    {!editable && !hideCompletedItems &&\n                    <button id=\"deleteCompleted\"\n                            onClick={() => setShowWarning(true)}>\n                        Delete Completed Items\n                    </button>\n                    }\n                </div>\n\n            }\n\n        </div>\n\n\n    );\n\n}\nexport default List;","import React, {useState} from 'react';\nimport List from \"./List.js\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB6K4Ycqr1bST4Zkkr_tTKRzEOQ5n9aY6o\",\n    authDomain: \"cs124-lab3-33ef0.firebaseapp.com\",\n    projectId: \"cs124-lab3-33ef0\",\n    storageBucket: \"cs124-lab3-33ef0.appspot.com\",\n    messagingSenderId: \"283056924726\",\n    appId: \"1:283056924726:web:12cc1133aa2ec5ffba1097\",\n    measurementId: \"G-E3QVKSNMGJ\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst collectionName = \"to-do-list\";\n\nfunction InMemoryApp(props) {\n    const [sortField, setSortField] = useState(\"created\");\n    const [sortDirection, setSortDirection] = useState(\"desc\");\n    const query = db.collection(collectionName).orderBy(sortField, sortDirection);\n    const collection = db.collection(collectionName);\n    const [value, loading, error] = useCollection(query);\n\n    function onItemAdded(item, priority) {\n        const newId = generateUniqueID();\n        let newItem = {id: newId,\n            item:item,\n            checked: false,\n            created: firebase.database.ServerValue.TIMESTAMP,\n            priority: priority};\n        const docRef = collection.doc(newId);\n        docRef.set(newItem);\n    }\n\n    function onItemsDeleted(ids) {\n        for(let id of ids) {\n            const docRef = collection.doc(id);\n            docRef.delete();\n        }\n    }\n\n    function onSortItems(sort) {\n        const [newSortField, newSortDirection] = sort.split(' ');\n        setSortField(newSortField);\n        setSortDirection(newSortDirection);\n    }\n\n    function onItemChanged(id, field, newVal){\n        const docRef = collection.doc(id);\n        docRef.update({[field]:newVal});\n    }\n\n    if (loading){\n        return <div>\n            <h1> Loading </h1>\n        </div>\n    }\n\n    let data = null;\n\n    if (value) {\n        data = value.docs.map(a => a.data());\n    }\n\n    return <List data={data}\n                 onItemAdded={onItemAdded}\n                 onItemsDeleted={onItemsDeleted}\n                 onItemChanged={onItemChanged}\n                 onSortItems={onSortItems}\n                 sortDirection={sortDirection}\n                 sortField={sortField}\n\n    />\n\n}\n\nexport default InMemoryApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport InMemoryApp from './InMemoryApp.js';\nimport reportWebVitals from './reportWebVitals';\n\nconst initialData = [\n    {\n        id: 0,\n        item: \"Buy new John Grisham Book\",\n        checked: false\n    },\n    {\n        id: 1,\n        item: \"Buy newer John Grisham Book\",\n        checked: true\n    }\n];\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <InMemoryApp initialData={initialData}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}